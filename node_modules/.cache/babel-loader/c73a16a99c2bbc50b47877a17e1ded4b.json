{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\balaj\\\\Desktop\\\\react-login\\\\src\\\\ResultPage.js\",\n  _s = $RefreshSig$();\n// PredictionResult.js\nimport React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './PredictionResult.css'; // Ensure this path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PredictionResult = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    predictionData\n  } = location.state || {\n    predictionData: {}\n  };\n  if (!predictionData) {\n    toast.error('No prediction data available');\n    navigate('/');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prediction-result\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Prediction Result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(predictionData, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/'),\n      children: \"Back to Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(PredictionResult, \"ZmJpvzBBf8J7VCgSKqUUk0eHjAY=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = PredictionResult;\nexport default PredictionResult;\nvar _c;\n$RefreshReg$(_c, \"PredictionResult\");","map":{"version":3,"names":["React","useLocation","useNavigate","toast","jsxDEV","_jsxDEV","PredictionResult","_s","location","navigate","predictionData","state","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","onClick","_c","$RefreshReg$"],"sources":["C:/Users/balaj/Desktop/react-login/src/ResultPage.js"],"sourcesContent":["// PredictionResult.js\r\nimport React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './PredictionResult.css'; // Ensure this path is correct\r\n\r\nconst PredictionResult = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { predictionData } = location.state || { predictionData: {} };\r\n\r\n  if (!predictionData) {\r\n    toast.error('No prediction data available');\r\n    navigate('/');\r\n  }\r\n\r\n  return (\r\n    <div className=\"prediction-result\">\r\n      <h2>Prediction Result</h2>\r\n      <pre>{JSON.stringify(predictionData, null, 2)}</pre>\r\n      <button onClick={() => navigate('/')}>Back to Form</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PredictionResult;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,uCAAuC;AAC9C,OAAO,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEQ;EAAe,CAAC,GAAGF,QAAQ,CAACG,KAAK,IAAI;IAAED,cAAc,EAAE,CAAC;EAAE,CAAC;EAEnE,IAAI,CAACA,cAAc,EAAE;IACnBP,KAAK,CAACS,KAAK,CAAC,8BAA8B,CAAC;IAC3CH,QAAQ,CAAC,GAAG,CAAC;EACf;EAEA,oBACEJ,OAAA;IAAKQ,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCT,OAAA;MAAAS,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1Bb,OAAA;MAAAS,QAAA,EAAMK,IAAI,CAACC,SAAS,CAACV,cAAc,EAAE,IAAI,EAAE,CAAC;IAAC;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACpDb,OAAA;MAAQgB,OAAO,EAAEA,CAAA,KAAMZ,QAAQ,CAAC,GAAG,CAAE;MAAAK,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV,CAAC;AAACX,EAAA,CAjBID,gBAAgB;EAAA,QACHL,WAAW,EACXC,WAAW;AAAA;AAAAoB,EAAA,GAFxBhB,gBAAgB;AAmBtB,eAAeA,gBAAgB;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}